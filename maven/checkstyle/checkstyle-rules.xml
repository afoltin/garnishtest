<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE module PUBLIC
          "-//Puppy Crawl//DTD Check Configuration 1.3//EN"
          "http://www.puppycrawl.com/dtds/configuration_1_3.dtd">


<module name="Checker">
    <property name="severity" value="error"/>

    <property name="localeLanguage" value="en"/>
    <property name="localeCountry"  value="US"/>
    <property name="charset"        value="UTF-8"/>

    <property name="fileExtensions" value="java, xml, properties"/>

    <!-- todo: setup imports order -->

    <!-- properties -->
    <module name="Translation"/>
    <module name="UniqueProperties" />

    <!-- forbid trailing spaces at the end of the line-->
    <module name="RegexpSingleline">
        <property name="format" value="\s+$"/>
    </module>

    <!-- reminded for code that should never be committed -->
    <module name="RegexpSingleline">
        <property name="format"  value="remove this before commit"/>
        <property name="message" value="Please remove this temporary code."/>
    </module>

    <!-- don't allow tabs -->
    <module name="FileTabCharacter">
        <property name="eachLine" value="true"/>
    </module>

    <module name="TreeWalker">
        <property name="tabWidth" value="4"/>

        <!--========== annotations ==========-->
        <module name="AnnotationUseStyle">
            <property name="trailingArrayComma" value="ignore" />
        </module>
        <module name="MissingDeprecated"/>
        <module name="MissingOverride"/>
        <module name="PackageAnnotation"/>
        <module name="SuppressWarnings">
            <property name="format" value="^all$"/>
        </module>

        <!-- allow to use @SuppressWarnings("checkstyle:...") to suppress a particular error -->
        <module name="SuppressWarningsHolder"/>


        <!--========== block checks ==========-->
        <module name="AvoidNestedBlocks" />
        <module name="EmptyBlock">
            <property name="option" value="text"/>
            <property name="tokens" value="LITERAL_WHILE, LITERAL_DO, LITERAL_FOR"/>
        </module>
        <module name="EmptyBlock">
            <property name="option" value="stmt"/>
            <property name="tokens" value="LITERAL_TRY, LITERAL_FINALLY, LITERAL_IF, LITERAL_ELSE, INSTANCE_INIT, STATIC_INIT, LITERAL_SWITCH, LITERAL_SYNCHRONIZED"/>
        </module>
        <module name="EmptyCatchBlock" />
        <module name="LeftCurly"/>
        <module name="NeedBraces"/>
        <module name="RightCurly"/>


        <!--========== class design ==========-->
        <module name="FinalClass"/>
        <module name="HideUtilityClassConstructor"/>
        <module name="InnerTypeLast"/>
        <module name="InterfaceIsType"/>
        <module name="MutableException"/>
        <module name="OneTopLevelClass"/>
        <module name="VisibilityModifier">
            <property name="allowPublicImmutableFields" value="false" />
        </module>


        <!--========== coding ==========-->
        <module name="ArrayTrailingComma"/>
        <module name="AvoidInlineConditionals"/>
        <module name="CovariantEquals"/>
        <module name="DeclarationOrder"/>
        <module name="DefaultComesLast"/>
        <module name="EmptyStatement"/>
        <module name="EqualsAvoidNull"/>
        <module name="EqualsHashCode"/>
        <module name="ExplicitInitialization"/>
        <module name="FallThrough"/>
        <module name="FallThrough">
            <property name="reliefPattern" value="TODO: refactor this code to remove fall-through"/>
        </module>
        <module name="FinalLocalVariable">
            <property name="tokens" value="VARIABLE_DEF, PARAMETER_DEF"/>
            <property name="validateEnhancedForLoopVariable" value="true"/>
        </module>
        <module name="IllegalCatch">
            <property name="illegalClassNames" value="java.lang.Throwable, java.lang.NullPointerException, java.lang.IllegalMonitorStateException, java.lang.ArrayIndexOutOfBoundsException, java.lang.IndexOutOfBoundsException, java.util.ConcurrentModificationException" />
        </module>
        <module name="IllegalInstantiation">
            <property name="classes" value="java.lang.String, java.lang.Integer, java.lang.Byte, java.lang.Character, java.lang.Short, java.lang.Boolean, java.lang.Long, java.lang.Double, java.lang.Float"/>
        </module>
        <module name="IllegalThrows">
            <property name="illegalClassNames" value="java.lang.Throwable, java.lang.NullPointerException"/>
        </module>
        <module name="IllegalToken">
            <property name="tokens" value="LABELED_STAT"/>
        </module>
        <module name="IllegalTokenText">
            <property name="tokens" value="NUM_INT, NUM_LONG"/>
            <property name="format" value="^0[^lx]"/>
            <property name="ignoreCase" value="true"/>
        </module>
        <module name="MagicNumber">
            <property name="ignoreNumbers" value="-1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 100, 1000" />
            <property name="ignoreHashCodeMethod" value="true" />
        </module>
        <module name="MissingSwitchDefault"/>
        <module name="ModifiedControlVariable"/>
        <module name="MultipleVariableDeclarations"/>
        <module name="NestedForDepth" />
        <module name="NestedIfDepth">
            <property name="max" value="2"/>
        </module>
        <module name="NestedTryDepth"/>
        <module name="NoClone"/>
        <module name="NoFinalizer"/>
        <module name="OneStatementPerLine"/>
        <module name="PackageDeclaration"/>
        <module name="ParameterAssignment"/>
        <module name="RequireThis">
            <property name="checkMethods" value="false"/>
        </module>
        <module name="SimplifyBooleanExpression"/>
        <module name="SimplifyBooleanReturn"/>
        <module name="StringLiteralEquality"/>
        <module name="SuperClone"/>
        <module name="SuperFinalize"/>


        <!--========== headers ==========-->
        <!-- TODO: enable this rule after deciding what header to use -->
        <!--
        <module name="Header">
            <property name="headerFile" value="config/java.header"/>
            <property name="fileExtensions" value="java"/>
        </module>
        -->


        <!--========== imports ==========-->
        <module name="AvoidStarImport"/>
<!--    TODO:
        <module name="CustomImportOrder" />
        <module name="ImportOrder" />
-->
        <module name="IllegalImport">
            <property name="illegalPkgs" value="sun"/>
        </module>
        <module name="RedundantImport"/>
        <module name="UnusedImports"/>

        <!--========== javadoc comments ==========-->
        <module name="AtclauseOrder">
            <property name="target" value="CLASS_DEF, INTERFACE_DEF, ENUM_DEF, METHOD_DEF, CTOR_DEF, VARIABLE_DEF"/>
            <property name="tagOrder" value="@deprecated, @param, @return, @throws, @see, @since"/>
        </module>
<!-- todo:
        <module name="JavadocMethod">
            <property name="scope" value="public"/>
            <property name="allowMissingParamTags" value="true"/>
            <property name="allowMissingThrowsTags" value="true"/>
            <property name="allowMissingReturnTag" value="true"/>
            <property name="minLineCount" value="2"/>
            <property name="allowedAnnotations" value="Override, Test"/>
            <property name="allowThrowsTagsForSubclasses" value="true"/>
        </module>
-->
        <module name="JavadocParagraph"/>
        <module name="JavadocStyle">
            <property name="checkEmptyJavadoc" value="false" />
        </module>
        <module name="JavadocTagContinuationIndentation" />
        <module name="NonEmptyAtclauseDescription"/>

        <!--========== metrics ==========-->
        <module name="BooleanExpressionComplexity"/>
        <module name="ClassFanOutComplexity">
            <property name="max" value="20"/>
        </module>
        <module name="CyclomaticComplexity">
            <property name="max" value="10"/>
        </module>
        <module name="JavaNCSS">
            <property name="methodMaximum" value="50"/>
            <property name="classMaximum"  value="500"/>
            <property name="fileMaximum"   value="750"/>
        </module>
        <module name="NPathComplexity">
            <property name="max" value="200"/>
        </module>


        <!--========== miscellaneous ==========-->
        <module name="ArrayTypeStyle"/>
        <module name="AvoidEscapedUnicodeCharacters">
            <property name="allowEscapesForControlCharacters" value="true"/>
            <property name="allowByTailComment" value="true"/>
            <property name="allowNonPrintableEscapes" value="true"/>
        </module>
        <module name="CommentsIndentation"/>
        <module name="FinalParameters">
            <property name="tokens" value="METHOD_DEF, CTOR_DEF, LITERAL_CATCH, FOR_EACH_CLAUSE"/>
        </module>
        <module name="Indentation">
            <property name="basicOffset"             value="4"/>
            <property name="braceAdjustment"         value="0"/>
            <property name="caseIndent"              value="4"/>
            <property name="throwsIndent"            value="8"/>
            <property name="arrayInitIndent"         value="8"/>
            <property name="lineWrappingIndentation" value="8"/>
        </module>
        <module name="OuterTypeFilename"/>
        <module name="UpperEll"/>


        <!--========== miscellaneous ==========-->
        <module name="ModifierOrder"/>


        <!--========== naming conventions ==========-->
        <module name="AbbreviationAsWordInName">
            <property name="allowedAbbreviationLength" value="1"/>
            <property name="ignoreFinal"               value="false"/>
        </module>
        <module name="CatchParameterName" />
        <module name="ClassTypeParameterName">
            <property name="format" value="(^[A-Z][0-9]?)$|([A-Z][a-zA-Z0-9]*[T]$)"/>
            <message key="name.invalidPattern" value="Class type name ''{0}'' must match pattern ''{1}''."/>
        </module>
        <module name="InterfaceTypeParameterName">
            <property name="format" value="(^[A-Z][0-9]?)$|([A-Z][a-zA-Z0-9]*[T]$)"/>
            <message key="name.invalidPattern" value="Interface type name ''{0}'' must match pattern ''{1}''."/>
        </module>
        <module name="ConstantName" />
        <module name="LocalFinalVariableName"/>
        <module name="LocalVariableName"/>
        <module name="MemberName" />
        <module name="MethodName">
            <property name="format" value="^[a-z][a-zA-Z0-9_]*$"/>
        </module>
        <module name="MethodTypeParameterName">
            <property name="format" value="(^[A-Z][0-9]?)$|([A-Z][a-zA-Z0-9]*[T]$)"/>
            <message key="name.invalidPattern" value="Method type name ''{0}'' must match pattern ''{1}''."/>
        </module>
        <module name="PackageName">
            <property name="format" value="^[a-z]+(\.[a-z][_a-z0-9]*)*$"/>
            <message key="name.invalidPattern"
                     value="Package name ''{0}'' must match pattern ''{1}''."/>
        </module>
        <module name="ParameterName" />
        <module name="StaticVariableName"/>
        <module name="TypeName"/>


        <!--========== naming conventions ==========-->
        <module name="AnonInnerLength" />
        <module name="ExecutableStatementCount">
            <property name="max" value="30"/>
        </module>


        <!--========== size violations ==========-->
        <module name="LineLength">
            <property name="max" value="160"/>
            <property name="ignorePattern" value="^package.*|^import.*|a href|href|http://|https://|ftp://"/>
        </module>
        <module name="OuterTypeNumber"/>
        <module name="ParameterNumber">
            <property name="max" value="7"/>
            <property name="ignoreOverriddenMethods" value="true" />
        </module>


        <!--========== whitespace ==========-->
        <module name="EmptyLineSeparator">
            <property name="tokens" value="PACKAGE_DEF, IMPORT, CLASS_DEF, INTERFACE_DEF, ENUM_DEF, STATIC_INIT, INSTANCE_INIT, CTOR_DEF, VARIABLE_DEF"/>
            <property name="allowNoEmptyLineBetweenFields" value="true"/>
        </module>
        <module name="GenericWhitespace"/>
        <module name="MethodParamPad"/>
        <module name="NoLineWrap">
            <property name="tokens" value="PACKAGE_DEF, IMPORT" />
        </module>
        <module name="OperatorWrap">
            <property name="option" value="NL"/>
            <property name="tokens" value="BAND, BOR, BSR, BXOR, DIV, EQUAL, GE, GT, LAND, LE, LITERAL_INSTANCEOF, LOR, LT, MINUS, MOD, NOT_EQUAL, PLUS, QUESTION, SL, SR, STAR "/>
        </module>
        <module name="SeparatorWrap">
            <property name="tokens" value="DOT"/>
            <property name="option" value="nl"/>
        </module>
        <module name="SeparatorWrap">
            <property name="tokens" value="COMMA"/>
            <property name="option" value="EOL"/>
        </module>
        <module name="WhitespaceAround">
            <property name="allowEmptyConstructors" value="true"/>
            <property name="allowEmptyMethods" value="true"/>
            <property name="allowEmptyTypes" value="true"/>
            <property name="allowEmptyLoops" value="true"/>
            <message key="ws.notFollowed" value="WhitespaceAround: ''{0}'' is not followed by whitespace. Empty blocks may only be represented as '{}' when not part of a multi-block statement (4.1.3)"/>
            <message key="ws.notPreceded" value="WhitespaceAround: ''{0}'' is not preceded with whitespace."/>
        </module>


    </module>

</module>
